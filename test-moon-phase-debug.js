// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –æ—Ç—á–µ—Ç–∞ –æ —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã
// –ó–∞–ø—É—Å–∫: node test-moon-phase-debug.js

const fetch = require('node-fetch');

async function testMoonPhaseAPI() {
  const baseUrl = 'http://localhost:3000';
  const endpoint = '/n8n/moon-phase-report';
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const testData = {
    telegramId: '1272270574', // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ ID, —á—Ç–æ –∏ –≤ –æ—à–∏–±–∫–µ
    language: 'russian'
  };

  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ—Ç—á–µ—Ç–∞ –æ —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã...');
    console.log('URL:', baseUrl + endpoint);
    console.log('–î–∞–Ω–Ω—ã–µ:', JSON.stringify(testData, null, 2));
    
    const response = await fetch(baseUrl + endpoint, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-n8n-token': 'hjoc83cu1498235lkjclwkjcoiajc02837c421ckljasd' // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —Ç–æ–∫–µ–Ω
      },
      body: JSON.stringify(testData)
    });

    console.log('\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:', Object.fromEntries(response.headers.entries()));

    if (response.ok) {
      const result = await response.json();
      console.log('\n‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:');
      console.log(JSON.stringify(result, null, 2));
    } else {
      const errorText = await response.text();
      console.log('\n‚ùå –û—à–∏–±–∫–∞:');
      console.log(errorText);
    }
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
async function checkServerHealth() {
  try {
    const response = await fetch('http://localhost:3000/health');
    if (response.ok) {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç');
      return true;
    }
  } catch (error) {
    console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
    return false;
  }
  return false;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function checkEnvironmentVariables() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.log('ASTROLOGY_API_USER_ID:', process.env.ASTROLOGY_API_USER_ID ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  console.log('ASTROLOGY_API_KEY:', process.env.ASTROLOGY_API_KEY ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  console.log('MONGO_URI:', process.env.MONGO_URI ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  console.log('N8N_TOKEN:', process.env.N8N_TOKEN ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

async function main() {
  console.log('üöÄ –û—Ç–ª–∞–¥–∫–∞ API –æ—Ç—á–µ—Ç–∞ –æ —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  checkEnvironmentVariables();
  console.log('');
  
  const serverRunning = await checkServerHealth();
  if (!serverRunning) {
    console.log('\nüí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: npm run dev');
    return;
  }
  
  await testMoonPhaseAPI();
  
  console.log('\nüìù –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏ 500:');
  console.log('1. ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ASTROLOGY_API_USER_ID –∏–ª–∏ ASTROLOGY_API_KEY');
  console.log('2. ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegramId 1272270574 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
  console.log('3. ‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å (–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, –≤—Ä–µ–º—è, –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ)');
  console.log('4. ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –≤–Ω–µ—à–Ω–µ–º—É API');
  console.log('5. ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ MongoDB');
  console.log('6. ‚ùå –û—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞)');
}

main().catch(console.error);
